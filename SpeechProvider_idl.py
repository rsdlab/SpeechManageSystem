# Python stubs generated by omniidl from idl/SpeechProvider.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


#
# Start of module "Provider"
#
__name__ = "Provider"
_0_Provider = omniORB.openModule("Provider", r"idl/SpeechProvider.idl")
_0_Provider__POA = omniORB.openModule("Provider__POA", r"idl/SpeechProvider.idl")


# interface SpeechProvider
_0_Provider._d_SpeechProvider = (omniORB.tcInternal.tv_objref, "IDL:Provider/SpeechProvider:1.0", "SpeechProvider")
omniORB.typeMapping["IDL:Provider/SpeechProvider:1.0"] = _0_Provider._d_SpeechProvider
_0_Provider.SpeechProvider = omniORB.newEmptyClass()
class SpeechProvider :
    _NP_RepositoryId = _0_Provider._d_SpeechProvider[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Provider.SpeechProvider = SpeechProvider
_0_Provider._tc_SpeechProvider = omniORB.tcInternal.createTypeCode(_0_Provider._d_SpeechProvider)
omniORB.registerType(SpeechProvider._NP_RepositoryId, _0_Provider._d_SpeechProvider, _0_Provider._tc_SpeechProvider)

# SpeechProvider operations and attributes
SpeechProvider._d_read = (((omniORB.tcInternal.tv_string,0), ), (), None)

# SpeechProvider object reference
class _objref_SpeechProvider (CORBA.Object):
    _NP_RepositoryId = SpeechProvider._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def read(self, *args):
        return self._obj.invoke("read", _0_Provider.SpeechProvider._d_read, args)

omniORB.registerObjref(SpeechProvider._NP_RepositoryId, _objref_SpeechProvider)
_0_Provider._objref_SpeechProvider = _objref_SpeechProvider
del SpeechProvider, _objref_SpeechProvider

# SpeechProvider skeleton
__name__ = "Provider__POA"
class SpeechProvider (PortableServer.Servant):
    _NP_RepositoryId = _0_Provider.SpeechProvider._NP_RepositoryId


    _omni_op_d = {"read": _0_Provider.SpeechProvider._d_read}

SpeechProvider._omni_skeleton = SpeechProvider
_0_Provider__POA.SpeechProvider = SpeechProvider
omniORB.registerSkeleton(SpeechProvider._NP_RepositoryId, SpeechProvider)
del SpeechProvider
__name__ = "Provider"

#
# End of module "Provider"
#
__name__ = "SpeechProvider_idl"

_exported_modules = ( "Provider", )

# The end.
